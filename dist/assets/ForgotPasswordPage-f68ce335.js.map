{"version":3,"file":"ForgotPasswordPage-f68ce335.js","sources":["../../src/pages/ForgotPassword/ForgotPasswordPage.tsx"],"sourcesContent":["import { EmailSchema, EmailType } from '@/data/paySchema'\nimport { usePasswordReset } from '@/hooks/usePasswordReset'\nimport { routes } from '@/lib/routes'\nimport { useStore } from '@/stores/store'\nimport {\n  Box,\n  Button,\n  Center,\n  Container,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Heading,\n  Input,\n  useColorModeValue,\n} from '@chakra-ui/react'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { motion as m } from 'framer-motion'\nimport { useEffect } from 'react'\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport { Form, useNavigate } from 'react-router-dom'\n\nexport default function Login() {\n  const snap = useStore()\n  const { passwordResetEmail } = usePasswordReset()\n\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    if (snap.userId) {\n      navigate(routes.DASHBOARD)\n    }\n  }, [snap.userId])\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setFocus,\n    formState: { errors, isDirty, isSubmitting, isValid, touchedFields },\n  } = useForm<EmailType>({\n    resolver: zodResolver(EmailSchema),\n  })\n\n  const bg = useColorModeValue('white', ' gray.800')\n\n  const onSubmit: SubmitHandler<EmailType> = async (data) => {\n    try {\n      passwordResetEmail(data.email)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  useEffect(() => {\n    setFocus('email')\n  }, [])\n\n  return (\n    <Container maxW=\"container.xl\" centerContent mt={8}>\n      <m.div\n        initial={{ opacity: 0, y: 80 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0 }}\n      >\n        <Center mt={5}>\n          <Heading\n            mt=\"10\"\n            fontSize={['3xl', '3xl', '4xl']}\n            as={m.h1}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            bgGradient=\"linear(to-b, #42047e, #07f49e)\"\n            bgClip=\"text\"\n            fontWeight=\"extrabold\"\n          >\n            Reset Password\n          </Heading>\n        </Center>\n        <Box\n          bg={bg}\n          border=\"2px\"\n          borderColor=\"cyan.600\"\n          boxShadow=\"dark-lg\"\n          p=\"6\"\n          rounded=\"lg\"\n          mt={10}\n          mb={10}\n          w=\"50vw\"\n          maxW=\"450px\"\n          minW=\"300px\"\n        >\n          <Box p=\"3\">\n            <Form onSubmit={handleSubmit(onSubmit)}>\n              <Box mb={2}>\n                <FormControl\n                  isInvalid={errors.email ? true : false}\n                  isRequired\n                  variant=\"floating\"\n                >\n                  <Input\n                    {...register('email')}\n                    id=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    autoComplete=\"email\"\n                  />\n                  <FormLabel htmlFor=\"email\">Email</FormLabel>\n                  <FormErrorMessage>\n                    {errors.email && errors.email.message}\n                  </FormErrorMessage>\n                </FormControl>\n              </Box>\n\n              <Center my={2}>\n                <Button\n                  mt={4}\n                  w=\"full\"\n                  colorScheme=\"cyan\"\n                  isLoading={isSubmitting}\n                  type=\"submit\"\n                  size=\"lg\"\n                  //   disabled={!canSubmit}\n                  disabled={!isDirty || !isValid || isSubmitting}\n                  loadingText=\"Logging In\"\n                  variant={'outline'}\n                  _hover={{\n                    bg: 'cyan.600',\n                    color: 'white',\n                    scale: 1.1,\n                  }}\n                >\n                  Submit\n                </Button>\n              </Center>\n            </Form>\n          </Box>\n        </Box>\n      </m.div>\n    </Container>\n  )\n}\n"],"names":["Login","snap","useStore","passwordResetEmail","usePasswordReset","navigate","useNavigate","useEffect","routes","register","handleSubmit","watch","setFocus","errors","isDirty","isSubmitting","isValid","touchedFields","useForm","zodResolver","EmailSchema","bg","useColorModeValue","onSubmit","data","error","Container","jsxs","m","jsx","Center","Heading","Box","Form","FormControl","Input","FormLabel","FormErrorMessage","Button"],"mappings":"qhBAsBA,SAAwBA,GAAQ,CAC9B,MAAMC,EAAOC,IACP,CAAE,mBAAAC,GAAuBC,IAEzBC,EAAWC,IAEjBC,EAAAA,QAAAA,UAAU,IAAM,CACVN,EAAK,QACPI,EAASG,EAAO,SAAS,CAC3B,EACC,CAACP,EAAK,MAAM,CAAC,EAEV,KAAA,CACJ,SAAAQ,EACA,aAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAW,CAAE,OAAAC,EAAQ,QAAAC,EAAS,aAAAC,EAAc,QAAAC,EAAS,cAAAC,CAAc,GACjEC,EAAmB,CACrB,SAAUC,EAAYC,CAAW,CAAA,CAClC,EAEKC,EAAKC,EAAkB,QAAS,WAAW,EAE3CC,EAAqC,MAAOC,GAAS,CACrD,GAAA,CACFrB,EAAmBqB,EAAK,KAAK,QACtBC,GACP,QAAQ,IAAIA,CAAK,CACnB,CAAA,EAEFlB,OAAAA,EAAAA,QAAAA,UAAU,IAAM,CACdK,EAAS,OAAO,CAClB,EAAG,CAAE,CAAA,IAGFc,EAAU,CAAA,KAAK,eAAe,cAAa,GAAC,GAAI,EAC/C,SAAAC,EAACC,EAAE,IAAF,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,KAAM,CAAE,QAAS,CAAE,EAEnB,SAAA,CAACC,EAAAC,EAAA,CAAO,GAAI,EACV,SAAAD,EAACE,EAAA,CACC,GAAG,KACH,SAAU,CAAC,MAAO,MAAO,KAAK,EAC9B,GAAIH,EAAE,GACN,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,KAAM,CAAE,QAAS,CAAE,EACnB,WAAW,iCACX,OAAO,OACP,WAAW,YACZ,SAAA,gBAAA,CAAA,EAGH,EACAC,EAACG,EAAA,CACC,GAAAX,EACA,OAAO,MACP,YAAY,WACZ,UAAU,UACV,EAAE,IACF,QAAQ,KACR,GAAI,GACJ,GAAI,GACJ,EAAE,OACF,KAAK,QACL,KAAK,QAEL,SAAAQ,EAACG,GAAI,EAAE,IACL,WAACC,EAAK,CAAA,SAAUvB,EAAaa,CAAQ,EACnC,SAAA,CAACM,EAAAG,EAAA,CAAI,GAAI,EACP,SAAAL,EAACO,EAAA,CACC,UAAW,EAAArB,EAAO,MAClB,WAAU,GACV,QAAQ,WAER,SAAA,CAAAgB,EAACM,EAAA,CACE,GAAG1B,EAAS,OAAO,EACpB,GAAG,QACH,KAAK,QACL,YAAY,QACZ,aAAa,OAAA,CACf,EACCoB,EAAAO,EAAA,CAAU,QAAQ,QAAQ,SAAK,QAAA,IAC/BC,EACE,CAAA,SAAAxB,EAAO,OAASA,EAAO,MAAM,QAChC,CAAA,CAAA,CAAA,EAEJ,EAEAgB,EAACC,EAAO,CAAA,GAAI,EACV,SAAAD,EAACS,EAAA,CACC,GAAI,EACJ,EAAE,OACF,YAAY,OACZ,UAAWvB,EACX,KAAK,SACL,KAAK,KAEL,SAAU,CAACD,GAAW,CAACE,GAAWD,EAClC,YAAY,aACZ,QAAS,UACT,OAAQ,CACN,GAAI,WACJ,MAAO,QACP,MAAO,GACT,EACD,SAAA,QAAA,CAAA,EAGH,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CAEJ"}