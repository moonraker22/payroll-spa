{"version":3,"file":"GoogleIcon-abdce502.js","sources":["../../src/hooks/useGoogleAuth.ts","../../src/pages/Login/GoogleIcon.tsx"],"sourcesContent":["import { auth, db, googleProvider } from '@/firebase'\nimport { routes } from '@/lib/routes'\nimport { storeActions } from '@/stores/store'\nimport { useToast } from '@chakra-ui/react'\nimport { getRedirectResult, signInWithPopup } from 'firebase/auth'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { doc, getDoc, serverTimestamp, setDoc } from 'firebase/firestore'\n\nexport function useGoogleAuth() {\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const toast = useToast()\n  const navigate = useNavigate()\n\n  async function googleLogin() {\n    setIsLoading(true)\n\n    try {\n      const res = await signInWithPopup(auth, googleProvider)\n      const result = await getRedirectResult(auth)\n      // const credential = GoogleAuthProvider.credentialFromResult(result)\n      // const token = credential.accessToken\n      const user = res?.user\n\n      if (user) {\n        const snapshot = await getDoc(doc(db, 'users', user?.uid))\n\n        if (!snapshot.exists()) {\n          const data = {\n            id: user?.uid,\n            displayName: user?.displayName,\n            email: user?.email,\n            avatar: user?.photoURL,\n            createdAt: serverTimestamp(),\n            role: 'user',\n            isAdmin: false,\n          }\n          const userRef = doc(db, 'users', user?.uid)\n          await setDoc(userRef, data)\n\n          if (user?.photoURL) storeActions.setAvatar(user?.photoURL)\n          storeActions.setIsSignedIn(true)\n          if (user?.email) storeActions.setUserEmail(user?.email)\n        } else {\n          storeActions.setAvatar(snapshot.data()?.avatar)\n          storeActions.setIsSignedIn(true)\n          storeActions.setUserEmail(snapshot.data()?.email)\n        }\n      }\n\n      toast({\n        title: 'Successfully logged in',\n        status: 'success',\n        isClosable: true,\n        position: 'top',\n        duration: 5000,\n        variant: 'solid',\n        colorScheme: 'cyan',\n      })\n\n      navigate(`${routes.DASHBOARD}`)\n    } catch (error: any) {\n      console.log('error', error)\n      toast({\n        title: 'Sign In failed',\n        description: error.message,\n        status: 'error',\n        isClosable: true,\n        position: 'top',\n        duration: 5000,\n        variant: 'solid',\n      })\n      setError(error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return { googleLogin, isLoading, error }\n}\n","import { createIcon } from '@chakra-ui/react'\n\nexport const GoogleIcon = createIcon({\n  displayName: 'GoogleIcon',\n  path: (\n    <g transform=\"matrix(1, 0, 0, 1, 27.009001, -39.238998)\">\n      <path\n        fill=\"#4285F4\"\n        d=\"M -3.264 51.509 C -3.264 50.719 -3.334 49.969 -3.454 49.239 L -14.754 49.239 L -14.754 53.749 L -8.284 53.749 C -8.574 55.229 -9.424 56.479 -10.684 57.329 L -10.684 60.329 L -6.824 60.329 C -4.564 58.239 -3.264 55.159 -3.264 51.509 Z\"\n      />\n      <path\n        fill=\"#34A853\"\n        d=\"M -14.754 63.239 C -11.514 63.239 -8.804 62.159 -6.824 60.329 L -10.684 57.329 C -11.764 58.049 -13.134 58.489 -14.754 58.489 C -17.884 58.489 -20.534 56.379 -21.484 53.529 L -25.464 53.529 L -25.464 56.619 C -23.494 60.539 -19.444 63.239 -14.754 63.239 Z\"\n      />\n      <path\n        fill=\"#FBBC05\"\n        d=\"M -21.484 53.529 C -21.734 52.809 -21.864 52.039 -21.864 51.239 C -21.864 50.439 -21.724 49.669 -21.484 48.949 L -21.484 45.859 L -25.464 45.859 C -26.284 47.479 -26.754 49.299 -26.754 51.239 C -26.754 53.179 -26.284 54.999 -25.464 56.619 L -21.484 53.529 Z\"\n      />\n      <path\n        fill=\"#EA4335\"\n        d=\"M -14.754 43.989 C -12.984 43.989 -11.404 44.599 -10.154 45.789 L -6.734 42.369 C -8.804 40.429 -11.514 39.239 -14.754 39.239 C -19.444 39.239 -23.494 41.939 -25.464 45.859 L -21.484 48.949 C -20.534 46.099 -17.884 43.989 -14.754 43.989 Z\"\n      />\n    </g>\n  ),\n})\n"],"names":["useGoogleAuth","isLoading","setIsLoading","useState","error","setError","toast","useToast","navigate","useNavigate","googleLogin","res","signInWithPopup","auth","googleProvider","result","getRedirectResult","user","snapshot","getDoc","doc","db","storeActions","_a","_b","data","serverTimestamp","userRef","setDoc","routes","GoogleIcon","createIcon","jsxs","jsx"],"mappings":"gPAUO,SAASA,GAAgB,CAC9B,KAAM,CAACC,EAAWC,CAAY,EAAIC,mBAAS,EAAK,EAC1C,CAACC,EAAOC,CAAQ,EAAIF,mBAAS,IAAI,EACjCG,EAAQC,IACRC,EAAWC,IAEjB,eAAeC,GAAc,SAC3BR,EAAa,EAAI,EAEb,GAAA,CACF,MAAMS,EAAM,MAAMC,EAAgBC,EAAMC,CAAc,EAChDC,EAAS,MAAMC,EAAkBH,CAAI,EAGrCI,EAAON,GAAA,YAAAA,EAAK,KAElB,GAAIM,EAAM,CACF,MAAAC,EAAW,MAAMC,EAAOC,EAAIC,EAAI,QAASJ,GAAA,YAAAA,EAAM,GAAG,CAAC,EAErD,GAACC,EAAS,SAiBZI,EAAa,WAAUC,EAAAL,EAAS,KAAK,IAAd,YAAAK,EAAiB,MAAM,EAC9CD,EAAa,cAAc,EAAI,EAC/BA,EAAa,cAAaE,EAAAN,EAAS,KAAK,IAAd,YAAAM,EAAiB,KAAK,MAnB1B,CACtB,MAAMC,EAAO,CACX,GAAIR,GAAA,YAAAA,EAAM,IACV,YAAaA,GAAA,YAAAA,EAAM,YACnB,MAAOA,GAAA,YAAAA,EAAM,MACb,OAAQA,GAAA,YAAAA,EAAM,SACd,UAAWS,EAAgB,EAC3B,KAAM,OACN,QAAS,EAAA,EAELC,EAAUP,EAAIC,EAAI,QAASJ,GAAA,YAAAA,EAAM,GAAG,EACpC,MAAAW,EAAOD,EAASF,CAAI,EAEtBR,GAAA,MAAAA,EAAM,UAAuBK,EAAA,UAAUL,GAAA,YAAAA,EAAM,QAAQ,EACzDK,EAAa,cAAc,EAAI,EAC3BL,GAAA,MAAAA,EAAM,OAAoBK,EAAA,aAAaL,GAAA,YAAAA,EAAM,KAAK,CAAA,CAM1D,CAEMX,EAAA,CACJ,MAAO,yBACP,OAAQ,UACR,WAAY,GACZ,SAAU,MACV,SAAU,IACV,QAAS,QACT,YAAa,MAAA,CACd,EAEQE,EAAA,GAAGqB,EAAO,WAAW,QACvBzB,GACC,QAAA,IAAI,QAASA,CAAK,EACpBE,EAAA,CACJ,MAAO,iBACP,YAAaF,EAAM,QACnB,OAAQ,QACR,WAAY,GACZ,SAAU,MACV,SAAU,IACV,QAAS,OAAA,CACV,EACDC,EAASD,CAAK,CAAA,QACd,CACAF,EAAa,EAAK,CACpB,CACF,CAEO,MAAA,CAAE,YAAAQ,EAAa,UAAAT,EAAW,MAAAG,EACnC,CC/EO,MAAM0B,EAAaC,EAAW,CACnC,YAAa,aACb,KACEC,EAAC,IAAE,CAAA,UAAU,4CACX,SAAA,CAAAC,EAAC,OAAA,CACC,KAAK,UACL,EAAE,2OAAA,CACJ,EACAA,EAAC,OAAA,CACC,KAAK,UACL,EAAE,iQAAA,CACJ,EACAA,EAAC,OAAA,CACC,KAAK,UACL,EAAE,mQAAA,CACJ,EACAA,EAAC,OAAA,CACC,KAAK,UACL,EAAE,gPAAA,CACJ,CAAA,EACF,CAEJ,CAAC"}